
#recommend top n similar users based on euclidean distances
import numpy as np
def similaruser(dict, person, n):
    q=[]
    for id in dict:
        if(id!=person):
            q.append((id,float(euclid(dict,person,id))))   
    q.sort(key=lambda tup:tup[1])
    top=q[:n]
    print top
    
************************************
ex result:
similaruser(rate,'344',3)
[('341', 0.0), ('814', 1.0), ('783', 1.4142135623730951)]
**********************************
#recommend top n similar users based on pearson correlation
import math
def simiuser(dict,person,n):
    t=[]
    for id in dict:
        if(id!=person):
            value=float(pearson(dict,person,id))
            if(math.isnan(value)==False):
                t.append((id,value))            
    t.sort(key=lambda tup:tup[1],reverse=True)
   
    top=t[:n]
    print top

ex result:
simiuser(rate,'344',3)
[('809', 0.8700435032627719), ('444', 0.8589556903873333), ('814', 0.8574929257125443)]
