#where the method parameter is a pearson or euclid as defined in the other file
def simiuser(dict,person,n,method):
    t=[]
    for id in dict:
        if(id!=person):
            value=float(method(dict,person,id))
            t.append((id,value))   
            
    t.sort(key=lambda tup:tup[1],reverse=True)  
    top=t[:n]
    print top
    
##return n most similar users to person from a group    
def simiuser(dict,person,group,n,method):
    t=[]
    for id in group:
        if(id!=person):
            value=float(method(dict,person,id))
            t.append((id,value))   
            
    t.sort(key=lambda tup:tup[1],reverse=True)  
    top=t[:n]
    import operator
    top=map(operator.itemgetter(0), top)
    return top
##################################################    
#CALCULATE EUCLIDEAN DISTANCE BETWEEN TWO DATA SETS
#dict is a 2d dictionary 
#person1 and person2 are user ids in the form of 'id'
def euclid(dict,person1,person2):
    c=[]
    d=[]
    for movie1 in dict[person1]:
        for movie2 in dict[person2]:
            if(movie1==movie2):
                c.append(dict[person1][movie1])
                d.append(dict[person2][movie2])
    a=np.array(c)
    b=np.array(d)
    dist = np.linalg.norm(a-b)
    return dist
##############################################    
#CALCULATE PEARSON CORRELATION BETWEEN TWO DATA SETS
#dict is a 2d dictionary
#person1 and person2 are user ids in the form of 'id'
import math
def pearson(dict,person1,person2):
    c=[]
    d=[]
    x=[]
    y=[]
    for movie1 in dict[person1]:
        for movie2 in dict[person2]:
            if(movie1==movie2):
                c.append(dict[person1][movie1])
                d.append(dict[person2][movie2])
    cmean=sum(c)/len(c)
    dmean=sum(d)/len(d)
    x=numpy.array(c)-cmean
    y=numpy.array(d)-dmean
    denom=math.sqrt(sum(numpy.array(x)**2)*sum(numpy.array(y)**2))
    num=sum(x*y)
    #if one of the variance is zero, then there is no correlation 
    if(denom==0):
        return 0
    return float(num/denom)
